"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5166],{4055:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>m,frontMatter:()=>d,metadata:()=>c,toc:()=>u});var a=t(5893),l=t(1151),r=t(4563),s=t(4866),i=t(5162);const d={sidebar_position:200},o="Events",c={id:"events/index",title:"Events",description:"Twitch4J uses Events4J to dispatch events and handle them, you can also build your own event handler to handle them however you like.",source:"@site/versioned_docs/version-1.x/events/index.mdx",sourceDirName:"events",slug:"/events/",permalink:"/events/",draft:!1,unlisted:!1,editUrl:"https://github.com/twitch4j/twitch4j.github.io/tree/master/docs/versioned_docs/version-1.x/events/index.mdx",tags:[],version:"1.x",lastUpdatedBy:"iProdigy",lastUpdatedAt:1707598838,formattedLastUpdatedAt:"Feb 10, 2024",sidebarPosition:200,frontMatter:{sidebar_position:200},sidebar:"version-1.x-docs",previous:{title:"Topic - Whispers",permalink:"/pubsub/topic-whispers"},next:{title:"EventHandler - Simple",permalink:"/events/eventhandler-simple"}},h={},u=[{value:"Publish Event",id:"publish-event",level:2},{value:"Handle / Process Events",id:"handle--process-events",level:2},{value:"Switch the default event handler",id:"switch-the-default-event-handler",level:5},{value:"Register your event listeners in a generic way",id:"register-your-event-listeners-in-a-generic-way",level:5},{value:"Simple Handler",id:"simple-handler",level:3},{value:"Lambda / Consumer Example",id:"lambda--consumer-example",level:6},{value:"Annotation Example",id:"annotation-example",level:6},{value:"Cheat Sheet",id:"cheat-sheet",level:6},{value:"Reactor Handler",id:"reactor-handler",level:3},{value:"Cheat Sheet",id:"cheat-sheet-1",level:6},{value:"Spring Handler",id:"spring-handler",level:3},{value:"Event Catalog",id:"event-catalog",level:2}];function v(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h5:"h5",h6:"h6",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"events",children:"Events"}),"\n",(0,a.jsxs)(n.p,{children:["Twitch4J uses ",(0,a.jsx)(n.a,{href:"https://github.com/PhilippHeuer/events4j",children:"Events4J"})," to dispatch events and handle them, you can also build your own event handler to handle them however you like.\nYou can use those events to build chat bots or similar tools."]}),"\n",(0,a.jsx)(n.h2,{id:"publish-event",children:"Publish Event"}),"\n",(0,a.jsx)(n.p,{children:"Publish a event that should be processed somewhere:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"The event object needs to implement the IEvent interface."}),"\n",(0,a.jsx)(n.li,{children:"The event will be passed to all registered handlers."}),"\n"]}),"\n",(0,a.jsxs)(s.default,{groupId:"code",children:[(0,a.jsx)(i.default,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"eventManager.publish(object);\n"})})}),(0,a.jsx)(i.default,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"eventManager.publish(`object`)\n"})})}),(0,a.jsx)(i.default,{value:"groovy",label:"Groovy",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-groovy",children:"eventManager.publish(object)\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"handle--process-events",children:"Handle / Process Events"}),"\n",(0,a.jsxs)(n.p,{children:["Twitch4J uses the ",(0,a.jsx)(n.code,{children:"SimpleHandler"})," by default which works on all platforms."]}),"\n",(0,a.jsx)(n.p,{children:"Handlers:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"SimpleHandler"}),"\n",(0,a.jsx)(n.li,{children:"ReactorHandler"}),"\n",(0,a.jsx)(n.li,{children:"SpringHandler"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["You can register listeners directly on the eventManager, the call is forwarded and registered on the current ",(0,a.jsx)(n.code,{children:"defaultEventHandler"})," set in the eventManager instance."]}),"\n",(0,a.jsx)(n.h5,{id:"switch-the-default-event-handler",children:"Switch the default event handler"}),"\n",(0,a.jsx)(n.p,{children:"If you want all your events to be processed by a specific eventHandler, then check out the following pages on all available eventHandlers:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"./eventhandler-simple",children:"SimpleEventHandler (Default)"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"./eventhandler-reactor",children:"ReactorEventHandler"})}),"\n"]}),"\n",(0,a.jsx)(n.h5,{id:"register-your-event-listeners-in-a-generic-way",children:"Register your event listeners in a generic way"}),"\n",(0,a.jsxs)(n.p,{children:["Only the consumers registered with ",(0,a.jsx)(n.code,{children:"eventManager.onEvent"})," will use the ",(0,a.jsx)(n.code,{children:"defaultEventHandler"}),"."]}),"\n",(0,a.jsxs)(s.default,{groupId:"code",children:[(0,a.jsx)(i.default,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// register handler\nIDisposable handlerReg = twitchClient.getEventManager().onEvent(ChannelMessageEvent.class, event -> {\n\tSystem.out.println "[" + event.getChannel().getName() + "]["+event.getPermissions().toString()+"] " + event.getUser().getName() + ": " + event.getMessage());\n});\n\n// cancel handler (don\'t call the method for new events of the required type anymore)\nhandlerReg.dispose();\n'})})}),(0,a.jsx)(i.default,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'// register handler\nval handlerReg = twitchClient.eventManager.onEvent(ChannelMessageEvent::class.java) { event ->\n\tprintln("[${event.channel.name}][${event.permissions}] ${event.user.name}: ${event.message}")\n}\n\n// cancel handler (don\'t call the method for new events of the required type anymore)\nhandlerReg.dispose()\n'})})}),(0,a.jsx)(i.default,{value:"groovy",label:"Groovy",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-groovy",children:'// register handler\ndef handlerReg = twitchClient.eventManager.onEvent(ChannelMessageEvent) { event ->\n\tSystem.out.println "[${event.channel.name}][${event.permissions}] ${event.user.name}: ${event.message}"\n}\n\n// cancel handler (don\'t call the method for new events of the required type anymore)\nhandlerReg.dispose()\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"This is the recommended method to register listeners, as you can switch between the different EventHandlers by chaning a single line of code."}),"\n",(0,a.jsx)(n.h3,{id:"simple-handler",children:"Simple Handler"}),"\n",(0,a.jsxs)(n.p,{children:["The default event handler can register ",(0,a.jsx)(n.code,{children:"handlers"})," with annotations or provide lambdas as consumers."]}),"\n",(0,a.jsx)(n.h6,{id:"lambda--consumer-example",children:"Lambda / Consumer Example"}),"\n",(0,a.jsxs)(s.default,{groupId:"code",children:[(0,a.jsx)(i.default,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// register handler\nIDisposable handlerReg = twitchClient.getEventManager().getEventHandler(SimpleEventHandler.class).onEvent(ChannelMessageEvent.class, event -> {\n\tSystem.out.println("[" + event.getChannel().getName() + "]["+event.getPermissions().toString()+"] " + event.getUser().getName() + ": " + event.getMessage());\n});\n\n// cancel handler (don\'t call the method for new events of the required type anymore)\nhandlerReg.dispose();\n'})})}),(0,a.jsx)(i.default,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'// register handler\nval handlerReg = twitchClient.eventManager.getEventHandler(SimpleEventHandler::class.java).onEvent(ChannelMessageEvent::class.java) { event -> \n\tprintln("[${event.channel.name}][${event.permissions}] ${event.user.name}: ${event.message}")\n}\n\n// cancel handler (don\'t call the method for new events of the required type anymore)\nhandlerReg.dispose()\n'})})}),(0,a.jsx)(i.default,{value:"groovy",label:"Groovy",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-groovy",children:'// register handler\ndef handlerReg = twitchClient.eventManager.getEventHandler(SimpleEventHandler).onEvent ChannelMessageEvent, { event -> \n\tSystem.out.println "[${event.channel.name}][${event.permissions}] ${event.user.name}: ${event.message} "\n}\n\n// cancel handler (don\'t call the method for new events of the required type anymore)\nhandlerReg.dispose()\n'})})})]}),"\n",(0,a.jsx)(n.h6,{id:"annotation-example",children:"Annotation Example"}),"\n",(0,a.jsxs)(s.default,{groupId:"code",children:[(0,a.jsx)(i.default,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'public class MyEventHandler {\n\n    // the type of the 1st argument is relevant, you can pick any method name you want\n    @EventSubscriber\n    public void printChannelMessage(ChannelMessageEvent event) {\n        System.out.println("[" + event.getChannel().getName() + "]["+event.getPermissions().toString()+"] " + event.getUser().getName() + ": " + event.getMessage());\n    }\n\n}\n\n// register your handler class\nMyEventHandler myEventHandler = new MyEventHandler();\neventManager.getEventHandler(SimpleEventHandler.class).registerListener(myEventHandler);\n'})})}),(0,a.jsx)(i.default,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'class MyEventHandler {\n\n    // the type of the 1st argument is relevant, you can pick any method name you want\n    @EventSubscriber\n    fun printChannelMessage(ChannelMessageEvent event) {\n        println("[${event.channel.name}][${event.permissions}] ${event.user.name}: ${event.message}")\n    }\n\n}\n\n// register your handler class\nval myEventHandler = MyEventHandler();\neventManager.getEventHandler(SimpleEventHandler::class.java).registerListener(myEventHandler);\n'})})}),(0,a.jsx)(i.default,{value:"groovy",label:"Groovy",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-groovy",children:'class MyEventHandler {\n\n    // the type of the 1st argument is relevant, you can pick any method name you want\n    @EventSubscriber\n    def printChannelMessage(ChannelMessageEvent event) {\n        System.out.println "[${event.channel.name}][${event.permissions}] ${event.user.name}: ${event.message}"\n    }\n\n}\n\n// register your handler class\ndef myEventHandler = new MyEventHandler();\neventManager.getEventHandler(SimpleEventHandler).registerListener(myEventHandler);\n'})})})]}),"\n",(0,a.jsx)(n.h6,{id:"cheat-sheet",children:"Cheat Sheet"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Key"}),(0,a.jsx)(n.th,{children:"Value"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Handler Execution"}),(0,a.jsx)(n.td,{children:"sync"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Android"}),(0,a.jsx)(n.td,{children:"compatible"})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"reactor-handler",children:"Reactor Handler"}),"\n",(0,a.jsxs)(n.p,{children:["If desired you can also use the ",(0,a.jsx)(n.code,{children:"ReactorHandler"})," to use reactive streams to process events (keep in mind that this will not work with android).\nTo enable reactor add the ",(0,a.jsx)(n.code,{children:"ReactorHandler"})," dependency, it will be discovered and registered automatically."]}),"\n",(0,a.jsx)(r.JavaDependency,{group:"com.github.philippheuer.events4j",name:"events4j-handler-reactor",version:"0.12.1",scope:"implementation"}),"\n",(0,a.jsxs)(s.default,{groupId:"code",children:[(0,a.jsx)(i.default,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// register handler\nDisposable handlerReg = twitchClient.getEventManager().getEventHandler(ReactorEventHandler.class).onEvent(ChannelMessageEvent.class, event -> {\n\tSystem.out.println("[" + event.getChannel().getName() + "]["+event.getPermissions().toString()+"] " + event.getUser().getName() + ": " + event.getMessage());\n});\n\n// cancel handler (don\'t call the method for new events of the required type anymore)\nhandlerReg.dispose();\n'})})}),(0,a.jsx)(i.default,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'// register handler\nval handlerReg = twitchClient.eventManager.getEventHandler(ReactorEventHandler::class.java).onEvent(ChannelMessageEvent::class.java) { event ->\n\tprintln("[${event.channel.name}]${event.permissions}] ${event.user.name}: ${event.message}")\n}\n\n// cancel handler (don\'t call the method for new events of the required type anymore)\nhandlerReg.dispose();\n'})})}),(0,a.jsx)(i.default,{value:"groovy",label:"Groovy",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-groovy",children:'// register handler\ndef handlerReg = twitchClient.eventManager.getEventHandler(ReactorEventHandler).onEvent ChannelMessageEvent, { event ->\n\tSystem.out.println "[${event.channel.name}]${event.permissions}] ${event.user.name}: ${event.message}"\n}\n\n// cancel handler (don\'t call the method for new events of the required type anymore)\nhandlerReg.dispose();\n'})})})]}),"\n",(0,a.jsx)(n.h6,{id:"cheat-sheet-1",children:"Cheat Sheet"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Key"}),(0,a.jsx)(n.th,{children:"Value"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Handler Execution"}),(0,a.jsx)(n.td,{children:"async"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Android"}),(0,a.jsx)(n.td,{children:"incompatible"})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"spring-handler",children:"Spring Handler"}),"\n",(0,a.jsxs)(n.p,{children:["If desired you can also use the ",(0,a.jsx)(n.code,{children:"SpringHandler"})," to handle all events as Spring Application Events.\nTo enable reactor add the ",(0,a.jsx)(n.code,{children:"SpringHandler"})," dependency, it will be discovered and registered automatically."]}),"\n",(0,a.jsx)(r.JavaDependency,{group:"com.github.philippheuer.events4j",name:"events4j-handler-spring",version:"0.12.1",scope:"implementation"}),"\n",(0,a.jsx)(n.h2,{id:"event-catalog",children:"Event Catalog"}),"\n",(0,a.jsx)(n.p,{children:"This will become a list of all available events."}),"\n",(0,a.jsx)(n.p,{children:"Channel:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"./channel-message-event",children:"ChannelMessageEvent"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"./channel-change-game-event",children:"ChannelChangeGameEvent"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"./channel-change-title-event",children:"ChannelChangeTitleEvent"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"./channel-go-live-event",children:"ChannelGoLiveEvent"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"./channel-go-offline-event",children:"ChannelGoOfflineEvent"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"User:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"./private-message-event",children:"PrivateMessageEvent"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Generic:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"./irc-message-event",children:"IRCMessageEvent"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"And many more, this is a very incomplete list"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Please visit our javadocs to find a more complete list of events:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://twitch4j.github.io/javadoc/com/github/twitch4j/chat/events/channel/package-summary.html",children:"Chat"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://twitch4j.github.io/javadoc/com/github/twitch4j/events/package-summary.html",children:"Client Helper"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://twitch4j.github.io/javadoc/com/github/twitch4j/eventsub/events/package-summary.html",children:"EventSub"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://twitch4j.github.io/javadoc/com/github/twitch4j/pubsub/events/package-summary.html",children:"PubSub"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(v,{...e})}):v(e)}},5162:(e,n,t)=>{t.r(n),t.d(n,{default:()=>s});t(7294);var a=t(6905);const l={tabItem:"tabItem_Ymn6"};var r=t(5893);function s(e){let{children:n,hidden:t,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.Z)(l.tabItem,s),hidden:t,children:n})}},4866:(e,n,t)=>{t.r(n),t.d(n,{default:()=>E});var a=t(7294),l=t(6905),r=t(2466),s=t(6550),i=t(469),d=t(1980),o=t(7392),c=t(12);function h(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:l}}=e;return{value:n,label:t,attributes:a,default:l}}))}(t);return function(e){const n=(0,o.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function v(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const l=(0,s.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,d._X)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(l.location.search);n.set(r,e),l.replace({...l.location,search:n.toString()})}),[r,l])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:l}=e,r=u(e),[s,d]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!v({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[o,h]=m({queryString:t,groupId:l}),[g,p]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[l,r]=(0,c.Nk)(t);return[l,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:l}),j=(()=>{const e=o??g;return v({value:e,tabValues:r})?e:null})();(0,i.Z)((()=>{j&&d(j)}),[j]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!v({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);d(e),h(e),p(e)}),[h,p,r]),tabValues:r}}var p=t(2389);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(5893);function x(e){let{className:n,block:t,selectedValue:a,selectValue:s,tabValues:i}=e;const d=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.o5)(),c=e=>{const n=e.currentTarget,t=d.indexOf(n),l=i[t].value;l!==a&&(o(n),s(l))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>d.push(e),onKeyDown:h,onClick:c,...r,className:(0,l.Z)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function b(e){let{lazy:n,children:t,selectedValue:l}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===l));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function y(e){const n=g(e);return(0,f.jsxs)("div",{className:(0,l.Z)("tabs-container",j.tabList),children:[(0,f.jsx)(x,{...e,...n}),(0,f.jsx)(b,{...e,...n})]})}function E(e){const n=(0,p.Z)();return(0,f.jsx)(y,{...e,children:h(e.children)},String(n))}},9185:function(e,n,t){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const l=a(t(7294)),r=a(t(4866)),s=a(t(5162)),i=a(t(9286));function d(e,n,t){return void 0!==t?e+":"+n+":"+t:e+":"+n}n.default=function(e){let n=void 0!==e.title?" - "+e.title:"",t=function(e){const n=void 0!==e.scope?e.scope:"implementation";let t="dependencies {\n";return t=0==(void 0!==e.bom&&e.bom)?t+"    "+n+" '"+d(e.group,e.name,e.version)+"'\n":t+"    "+n+" platform('"+d(e.group,e.name,e.version)+"')\n",t+="}",t}(e),a=function(e){const n=void 0!==e.scope?e.scope:"implementation";let t="dependencies {\n";return t=0==(void 0!==e.bom&&e.bom)?t+"    "+n+'("'+d(e.group,e.name,e.version)+'")\n':t+"    "+n+'(platform("'+d(e.group,e.name,e.version)+'"))\n',t+="}",t}(e),o=function(e){let n="";return 0==(void 0!==e.bom&&e.bom)?(n+="<dependency>\n",n=n+"    <groupId>"+e.group+"</groupId>\n",n=n+"    <artifactId>"+e.name+"</artifactId>\n",void 0!==e.version&&(n=n+"    <version>"+e.version+"</version>\n"),n+="</dependency>\n"):(n+="<dependencyManagement>\n",n+="    <dependencies>\n",n+="        <dependency>\n",n=n+"            <groupId>"+e.group+"</groupId>\n",n=n+"            <artifactId>"+e.name+"</artifactId>\n",void 0!==e.version&&(n=n+"            <version>"+e.version+"</version>\n"),n+="            <type>pom</type>\n",n+="            <scope>import</scope>\n",n+="        </dependency>\n",n+="    </dependencies>\n",n+="</dependencyManagement>\n"),n}(e);return l.default.createElement(l.default.Fragment,null,l.default.createElement(r.default,{groupId:"dependency"},l.default.createElement(s.default,{value:"gradle-groovy",label:l.default.createElement(l.default.Fragment,null,"Gradle")},l.default.createElement(i.default,{language:"groovy",title:"build.gradle"+n},t)),l.default.createElement(s.default,{value:"gradle-kotlin",label:l.default.createElement(l.default.Fragment,null,"Gradle - Kotlin DSL")},l.default.createElement(i.default,{language:"kotlin",title:"build.gradle.kts"+n},a)),l.default.createElement(s.default,{value:"maven",label:l.default.createElement(l.default.Fragment,null,"Maven")},l.default.createElement(i.default,{language:"xml",title:"pom.xml"+n},o))))}},4563:function(e,n,t){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.JavaDependency=void 0;const l=a(t(9185));n.JavaDependency=l.default}}]);