"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9152],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=a.createContext({}),o=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=o(e.components);return a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=o(n),c=l,f=m["".concat(u,".").concat(c)]||m[c]||d[c]||r;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:l,i[1]=s;for(var o=2;o<r;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var a=n(7294),l=n(6010);const r="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,i),hidden:n},t)}},4866:(e,t,n)=>{n.r(t),n.d(t,{default:()=>I});var a=n(7462),l=n(7294),r=n(6010),i=n(2466),s=n(6775),u=n(1980),o=n(7392),p=n(12);function d(e){return function(e){return l.Children.map(e,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:l}}=e;return{value:t,label:n,attributes:a,default:l}}))}function m(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=null!=t?t:d(n);return function(e){const t=(0,o.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function c(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,u._X)(r),(0,l.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=m(e),[i,s]=(0,l.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!c({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const l=null!=(t=a.find((e=>e.default)))?t:a[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:t,tabValues:r}))),[u,o]=f({queryString:n,groupId:a}),[d,g]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[a,r]=(0,p.Nk)(n);return[a,(0,l.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),k=(()=>{const e=null!=u?u:d;return c({value:e,tabValues:r})?e:null})();(0,l.useLayoutEffect)((()=>{k&&s(k)}),[k]);return{selectedValue:i,selectValue:(0,l.useCallback)((e=>{if(!c({value:e,tabValues:r}))throw new Error("Can't select invalid tab value="+e);s(e),o(e),g(e)}),[o,g,r]),tabValues:r}}var k=n(2389);const h="tabList__CuJ",b="tabItem_LNqP";function v(e){let{className:t,block:n,selectedValue:s,selectValue:u,tabValues:o}=e;const p=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),m=e=>{const t=e.currentTarget,n=p.indexOf(t),a=o[n].value;a!==s&&(d(t),u(a))},c=e=>{var t;let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{var a;const t=p.indexOf(e.currentTarget)+1;n=null!=(a=p[t])?a:p[0];break}case"ArrowLeft":{var l;const t=p.indexOf(e.currentTarget)-1;n=null!=(l=p[t])?l:p[p.length-1];break}}null==(t=n)||t.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},o.map((e=>{let{value:t,label:n,attributes:i}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>p.push(e),onKeyDown:c,onClick:m},i,{className:(0,r.Z)("tabs__item",b,null==i?void 0:i.className,{"tabs__item--active":s===t})}),null!=n?n:t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=g(e);return l.createElement("div",{className:(0,r.Z)("tabs-container",h)},l.createElement(v,(0,a.Z)({},e,t)),l.createElement(y,(0,a.Z)({},e,t)))}function I(e){const t=(0,k.Z)();return l.createElement(N,(0,a.Z)({key:String(t)},e))}},8681:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var a=n(7462),l=(n(7294),n(3905)),r=n(4866),i=n(5162);const s={sidebar_position:20},u="Drops - Get Entitlements",o={unversionedId:"rest-helix/drops-get-entitlements",id:"version-1.x/rest-helix/drops-get-entitlements",title:"Drops - Get Entitlements",description:"Description",source:"@site/versioned_docs/version-1.x/rest-helix/drops-get-entitlements.mdx",sourceDirName:"rest-helix",slug:"/rest-helix/drops-get-entitlements",permalink:"/rest-helix/drops-get-entitlements",draft:!1,editUrl:"https://github.com/twitch4j/twitch4j.github.io/tree/master/docs/versioned_docs/version-1.x/rest-helix/drops-get-entitlements.mdx",tags:[],version:"1.x",lastUpdatedBy:"Eleeka",lastUpdatedAt:1672244597,formattedLastUpdatedAt:"Dec 28, 2022",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"version-1.x-docs",previous:{title:"Bits - Leaderboard",permalink:"/rest-helix/bits-leaderboard"},next:{title:"Entitlements - Get Code Status",permalink:"/rest-helix/entitlements-codes"}},p={},d=[{value:"Description",id:"description",level:2},{value:"Method Definition",id:"method-definition",level:2},{value:"Code Snippets",id:"code-snippets",level:2},{value:"Print entitlements with a specific ID",id:"print-entitlements-with-a-specific-id",level:3},{value:"Print entitlements for a specific Game",id:"print-entitlements-for-a-specific-game",level:3},{value:"Print the entitlements associated with a specific user",id:"print-the-entitlements-associated-with-a-specific-user",level:3},{value:"Print claimed but not fulfilled entitlements across games owned by the organization",id:"print-claimed-but-not-fulfilled-entitlements-across-games-owned-by-the-organization",level:3}],m={toc:d};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"drops---get-entitlements"},"Drops - Get Entitlements"),(0,l.kt)("h2",{id:"description"},"Description"),(0,l.kt)("p",null,"Gets an organization's list of entitlements that have been granted to a game, a user, or both."),(0,l.kt)("p",null,"The ",(0,l.kt)("em",{parentName:"p"},"client ID")," in the access token must own the game. App access tokens can pass any combination of request parameters (below) while requests using user access tokens must ",(0,l.kt)("em",{parentName:"p"},"not")," specify any userId."),(0,l.kt)("p",null,"Valid combinations of request parameters are (given appropriate oauth access):"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"no fields"),(0,l.kt)("li",{parentName:"ul"},"only userId"),(0,l.kt)("li",{parentName:"ul"},"only gameId"),(0,l.kt)("li",{parentName:"ul"},"both userId and gameId")),(0,l.kt)("h2",{id:"method-definition"},"Method Definition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@RequestLine("GET /entitlements/drops?id={id}&user_id={user_id}&game_id={game_id}&fulfillment_status={fulfillment_status}&after={after}&first={first}")\n@Headers("Authorization: Bearer {token}")\nHystrixCommand<DropsEntitlementList> getDropsEntitlements(\n        @Param("token") String authToken,\n        @Param("id") String id,\n        @Param("user_id") String userId,\n        @Param("game_id") String gameId,\n        @Param("fulfillment_status") DropFulfillmentStatus status,\n        @Param("after") String after,\n        @Param("first") Integer limit\n    );\n')),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Required Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"authToken"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"App access token or user access token")))),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Optional Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Unique identifier of the entitlements")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user_id"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"User ID, that was granted entitlements")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"game_id"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Game ID, that offered entitlements")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"fulfillment_status"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Status used to filter entitlements. Example- 'claimed' or 'fulfilled'")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"after"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The cursor used to get the next page of results.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"first"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},"The maximum number of entitlements to return per page in the response.")))),(0,l.kt)("h2",{id:"code-snippets"},"Code Snippets"),(0,l.kt)("h3",{id:"print-entitlements-with-a-specific-id"},"Print entitlements with a specific ID"),(0,l.kt)(r.default,{groupId:"code",mdxType:"Tabs"},(0,l.kt)(i.default,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'DropsEntitlementList resultList = twitchClient.getHelix().getDropsEntitlements("appAccessToken", "entitlementId", null, null, null, null, 1000).execute();\nresultList.getData().forEach(drop -> System.out.printf("User ID: %s - Status: %s\\n", drop.getUserId(), drop.getFulfillmentStatus()));\n'))),(0,l.kt)(i.default,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'val resultlist = twitchClient.helix.getDropsEntitlements("appAccessToken","entitlementId",null,null,null,null,1000).execute()\nresultList.data.forEach {\n    println("User ID: ${it.userId} - Status: ${it.fulfillmentStatus}")\n}\n'))),(0,l.kt)(i.default,{value:"groovy",label:"Groovy",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy"},'def resultList = twitchClient.helix.getDropsEntitlements("appAccessToken", "entitlementId", null, null, null, null, 1000).execute()\nresultList.data.each { drop ->\n    System.out.println "User ID: ${drop.userId} - Status: ${drop.fulfillmentStatus}"\n}\n')))),(0,l.kt)("h3",{id:"print-entitlements-for-a-specific-game"},"Print entitlements for a specific Game"),(0,l.kt)(r.default,{groupId:"code",mdxType:"Tabs"},(0,l.kt)(i.default,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'DropsEntitlementList resultList = twitchClient.getHelix().getDropsEntitlements("appAccessToken", null, null, "gameId", null, null, 1000).execute();\nresultList.getData().forEach(drop -> System.out.printf("User ID: %s - Status: %s\\n", drop.getUserId(), drop.getFulfillmentStatus()));\n'))),(0,l.kt)(i.default,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'val resultList = twitchClient.helix.getDropsEntitlements("appAccessToken", null, null, "gameId", null, null, 1000).execute()\nresultList.data.forEach {\n    println("User ID: ${it.userId} - Status: ${it.fulfillmentStatus}")\n}\n'))),(0,l.kt)(i.default,{value:"groovy",label:"Groovy",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy"},'def resultList = twitchClient.helix.getDropsEntitlements("appAccessToken", null, null, "gameId", null, null, 1000).execute();\nresultList.data.each { drop ->\n    System.out.println "User ID: ${drop.userId} - Status: ${drop.fulfillmentStatus}"\n}\n')))),(0,l.kt)("h3",{id:"print-the-entitlements-associated-with-a-specific-user"},"Print the entitlements associated with a specific user"),(0,l.kt)(r.default,{groupId:"code",mdxType:"Tabs"},(0,l.kt)(i.default,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'DropsEntitlementList resultList = twitchClient.getHelix().getDropsEntitlements("appAccessToken", null, "userId", null, null, null, 1000).execute();\nresultList.getData().forEach(drop -> System.out.printf("Game ID: %s - Status: %s\\n", drop.getGameId(), drop.getFulfillmentStatus()));\n'))),(0,l.kt)(i.default,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'val resultList = twitchClient.helix.getDropsEntitlements("appAccessToken", null, "userId", null, null, null, 1000).execute()\nresultList.data.forEach {\n    println("Game ID: ${it.gameId} - Status: ${it.fulfillmentStatus}")\n}\n'))),(0,l.kt)(i.default,{value:"groovy",label:"Groovy",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy"},'def resultList = twitchClient.helix.getDropsEntitlements("appAccessToken", null, "userId", null, null, null, 1000).execute();\nresultList.data.each { drop ->\n    System.out.println "Game ID: ${drop.gameId} - Status: ${drop.fulfillmentStatus}"\n}\n')))),(0,l.kt)("h3",{id:"print-claimed-but-not-fulfilled-entitlements-across-games-owned-by-the-organization"},"Print claimed but not fulfilled entitlements across games owned by the organization"),(0,l.kt)(r.default,{groupId:"code",mdxType:"Tabs"},(0,l.kt)(i.default,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'DropsEntitlementList resultList = twitchClient.getHelix().getDropsEntitlements("appAccessToken", null, null, null, DropFulfillmentStatus.CLAIMED, null, 1000).execute();\nresultList.getData().forEach(drop -> System.out.printf("User ID: %s - Timestamp: %s\\n", drop.getUserId(), drop.getUpdatedAt()));\n'))),(0,l.kt)(i.default,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'val resultList = twitchClient.helix.getDropsEntitlements("appAccessToken", null, null, null, DropFulfillmentStatus.CLAIMED, null, 1000).execute()\nresultList.data.forEach {\n    println("User ID: ${it.userId} - Timestamp: ${it.updatedAt}")\n}\n'))),(0,l.kt)(i.default,{value:"groovy",label:"Groovy",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy"},'def resultList = twitchClient.helix().getDropsEntitlements("appAccessToken", null, null, null, DropFulfillmentStatus.CLAIMED, null, 1000).execute();\nresultList.data.each { drop ->\n    System.out.println "User ID: ${drop.userId} - Timestamp: ${drop.updatedAt}"\n}\n')))))}c.isMDXComponent=!0}}]);