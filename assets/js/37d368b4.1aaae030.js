"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9152],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=l.createContext({}),o=function(e){var t=l.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=o(e.components);return l.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=o(n),c=a,f=m["".concat(u,".").concat(c)]||m[c]||d[c]||r;return n?l.createElement(f,i(i({ref:t},p),{},{components:n})):l.createElement(f,i({ref:t},p))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var o=2;o<r;o++)i[o]=n[o];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var l=n(7294),a=n(6010);const r="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return l.createElement("div",{role:"tabpanel",className:(0,a.Z)(r,i),hidden:n},t)}},5488:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var l=n(7462),a=n(7294),r=n(6010),i=n(2389),s=n(7392),u=n(7094),o=n(2466);const p="tabList__CuJ",d="tabItem_LNqP";function m(e){var t,n;const{lazy:i,block:m,defaultValue:c,values:f,groupId:g,className:k}=e,h=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=f?f:h.map((e=>{let{props:{value:t,label:n,attributes:l}}=e;return{value:t,label:n,attributes:l}})),v=(0,s.l)(b,((e,t)=>e.value===t.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===c?c:null!=(t=null!=c?c:null==(n=h.find((e=>e.props.default)))?void 0:n.props.value)?t:h[0].props.value;if(null!==y&&!b.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:N,setTabGroupChoices:x}=(0,u.U)(),[T,I]=(0,a.useState)(y),D=[],{blockElementScrollPositionUntilNextRender:E}=(0,o.o5)();if(null!=g){const e=N[g];null!=e&&e!==T&&b.some((t=>t.value===e))&&I(e)}const w=e=>{const t=e.currentTarget,n=D.indexOf(t),l=b[n].value;l!==T&&(E(t),I(l),null!=g&&x(g,String(l)))},S=e=>{var t;let n=null;switch(e.key){case"Enter":w(e);break;case"ArrowRight":{var l;const t=D.indexOf(e.currentTarget)+1;n=null!=(l=D[t])?l:D[0];break}case"ArrowLeft":{var a;const t=D.indexOf(e.currentTarget)-1;n=null!=(a=D[t])?a:D[D.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,r.Z)("tabs-container",p)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":m},k)},b.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,l.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>D.push(e),onKeyDown:S,onClick:w},i,{className:(0,r.Z)("tabs__item",d,null==i?void 0:i.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),i?(0,a.cloneElement)(h.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function c(e){const t=(0,i.Z)();return a.createElement(m,(0,l.Z)({key:String(t)},e))}},8681:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var l=n(7462),a=(n(7294),n(3905)),r=n(5488),i=n(5162);const s={sidebar_position:20},u="Drops - Get Entitlements",o={unversionedId:"rest-helix/drops-get-entitlements",id:"version-1.x/rest-helix/drops-get-entitlements",title:"Drops - Get Entitlements",description:"Description",source:"@site/versioned_docs/version-1.x/rest-helix/drops-get-entitlements.mdx",sourceDirName:"rest-helix",slug:"/rest-helix/drops-get-entitlements",permalink:"/rest-helix/drops-get-entitlements",draft:!1,editUrl:"https://github.com/twitch4j/twitch4j.github.io/tree/master/docs/versioned_docs/version-1.x/rest-helix/drops-get-entitlements.mdx",tags:[],version:"1.x",lastUpdatedBy:"Eleeka",lastUpdatedAt:1672244597,formattedLastUpdatedAt:"Dec 28, 2022",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"version-1.x-docs",previous:{title:"Bits - Leaderboard",permalink:"/rest-helix/bits-leaderboard"},next:{title:"Entitlements - Get Code Status",permalink:"/rest-helix/entitlements-codes"}},p={},d=[{value:"Description",id:"description",level:2},{value:"Method Definition",id:"method-definition",level:2},{value:"Code Snippets",id:"code-snippets",level:2},{value:"Print entitlements with a specific ID",id:"print-entitlements-with-a-specific-id",level:3},{value:"Print entitlements for a specific Game",id:"print-entitlements-for-a-specific-game",level:3},{value:"Print the entitlements associated with a specific user",id:"print-the-entitlements-associated-with-a-specific-user",level:3},{value:"Print claimed but not fulfilled entitlements across games owned by the organization",id:"print-claimed-but-not-fulfilled-entitlements-across-games-owned-by-the-organization",level:3}],m={toc:d};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,l.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"drops---get-entitlements"},"Drops - Get Entitlements"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Gets an organization's list of entitlements that have been granted to a game, a user, or both."),(0,a.kt)("p",null,"The ",(0,a.kt)("em",{parentName:"p"},"client ID")," in the access token must own the game. App access tokens can pass any combination of request parameters (below) while requests using user access tokens must ",(0,a.kt)("em",{parentName:"p"},"not")," specify any userId."),(0,a.kt)("p",null,"Valid combinations of request parameters are (given appropriate oauth access):"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"no fields"),(0,a.kt)("li",{parentName:"ul"},"only userId"),(0,a.kt)("li",{parentName:"ul"},"only gameId"),(0,a.kt)("li",{parentName:"ul"},"both userId and gameId")),(0,a.kt)("h2",{id:"method-definition"},"Method Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@RequestLine("GET /entitlements/drops?id={id}&user_id={user_id}&game_id={game_id}&fulfillment_status={fulfillment_status}&after={after}&first={first}")\n@Headers("Authorization: Bearer {token}")\nHystrixCommand<DropsEntitlementList> getDropsEntitlements(\n        @Param("token") String authToken,\n        @Param("id") String id,\n        @Param("user_id") String userId,\n        @Param("game_id") String gameId,\n        @Param("fulfillment_status") DropFulfillmentStatus status,\n        @Param("after") String after,\n        @Param("first") Integer limit\n    );\n')),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Required Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"authToken"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"App access token or user access token")))),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Optional Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"id"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Unique identifier of the entitlements")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"user_id"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"User ID, that was granted entitlements")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"game_id"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Game ID, that offered entitlements")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"fulfillment_status"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Status used to filter entitlements. Example- 'claimed' or 'fulfilled'")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"after"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The cursor used to get the next page of results.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"first"),(0,a.kt)("td",{parentName:"tr",align:null},"integer"),(0,a.kt)("td",{parentName:"tr",align:null},"The maximum number of entitlements to return per page in the response.")))),(0,a.kt)("h2",{id:"code-snippets"},"Code Snippets"),(0,a.kt)("h3",{id:"print-entitlements-with-a-specific-id"},"Print entitlements with a specific ID"),(0,a.kt)(r.default,{groupId:"code",mdxType:"Tabs"},(0,a.kt)(i.default,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'DropsEntitlementList resultList = twitchClient.getHelix().getDropsEntitlements("appAccessToken", "entitlementId", null, null, null, null, 1000).execute();\nresultList.getData().forEach(drop -> System.out.printf("User ID: %s - Status: %s\\n", drop.getUserId(), drop.getFulfillmentStatus()));\n'))),(0,a.kt)(i.default,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'val resultlist = twitchClient.helix.getDropsEntitlements("appAccessToken","entitlementId",null,null,null,null,1000).execute()\nresultList.data.forEach {\n    println("User ID: ${it.userId} - Status: ${it.fulfillmentStatus}")\n}\n'))),(0,a.kt)(i.default,{value:"groovy",label:"Groovy",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},'def resultList = twitchClient.helix.getDropsEntitlements("appAccessToken", "entitlementId", null, null, null, null, 1000).execute()\nresultList.data.each { drop ->\n    System.out.println "User ID: ${drop.userId} - Status: ${drop.fulfillmentStatus}"\n}\n')))),(0,a.kt)("h3",{id:"print-entitlements-for-a-specific-game"},"Print entitlements for a specific Game"),(0,a.kt)(r.default,{groupId:"code",mdxType:"Tabs"},(0,a.kt)(i.default,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'DropsEntitlementList resultList = twitchClient.getHelix().getDropsEntitlements("appAccessToken", null, null, "gameId", null, null, 1000).execute();\nresultList.getData().forEach(drop -> System.out.printf("User ID: %s - Status: %s\\n", drop.getUserId(), drop.getFulfillmentStatus()));\n'))),(0,a.kt)(i.default,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'val resultList = twitchClient.helix.getDropsEntitlements("appAccessToken", null, null, "gameId", null, null, 1000).execute()\nresultList.data.forEach {\n    println("User ID: ${it.userId} - Status: ${it.fulfillmentStatus}")\n}\n'))),(0,a.kt)(i.default,{value:"groovy",label:"Groovy",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},'def resultList = twitchClient.helix.getDropsEntitlements("appAccessToken", null, null, "gameId", null, null, 1000).execute();\nresultList.data.each { drop ->\n    System.out.println "User ID: ${drop.userId} - Status: ${drop.fulfillmentStatus}"\n}\n')))),(0,a.kt)("h3",{id:"print-the-entitlements-associated-with-a-specific-user"},"Print the entitlements associated with a specific user"),(0,a.kt)(r.default,{groupId:"code",mdxType:"Tabs"},(0,a.kt)(i.default,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'DropsEntitlementList resultList = twitchClient.getHelix().getDropsEntitlements("appAccessToken", null, "userId", null, null, null, 1000).execute();\nresultList.getData().forEach(drop -> System.out.printf("Game ID: %s - Status: %s\\n", drop.getGameId(), drop.getFulfillmentStatus()));\n'))),(0,a.kt)(i.default,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'val resultList = twitchClient.helix.getDropsEntitlements("appAccessToken", null, "userId", null, null, null, 1000).execute()\nresultList.data.forEach {\n    println("Game ID: ${it.gameId} - Status: ${it.fulfillmentStatus}")\n}\n'))),(0,a.kt)(i.default,{value:"groovy",label:"Groovy",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},'def resultList = twitchClient.helix.getDropsEntitlements("appAccessToken", null, "userId", null, null, null, 1000).execute();\nresultList.data.each { drop ->\n    System.out.println "Game ID: ${drop.gameId} - Status: ${drop.fulfillmentStatus}"\n}\n')))),(0,a.kt)("h3",{id:"print-claimed-but-not-fulfilled-entitlements-across-games-owned-by-the-organization"},"Print claimed but not fulfilled entitlements across games owned by the organization"),(0,a.kt)(r.default,{groupId:"code",mdxType:"Tabs"},(0,a.kt)(i.default,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'DropsEntitlementList resultList = twitchClient.getHelix().getDropsEntitlements("appAccessToken", null, null, null, DropFulfillmentStatus.CLAIMED, null, 1000).execute();\nresultList.getData().forEach(drop -> System.out.printf("User ID: %s - Timestamp: %s\\n", drop.getUserId(), drop.getUpdatedAt()));\n'))),(0,a.kt)(i.default,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'val resultList = twitchClient.helix.getDropsEntitlements("appAccessToken", null, null, null, DropFulfillmentStatus.CLAIMED, null, 1000).execute()\nresultList.data.forEach {\n    println("User ID: ${it.userId} - Timestamp: ${it.updatedAt}")\n}\n'))),(0,a.kt)(i.default,{value:"groovy",label:"Groovy",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},'def resultList = twitchClient.helix().getDropsEntitlements("appAccessToken", null, null, null, DropFulfillmentStatus.CLAIMED, null, 1000).execute();\nresultList.data.each { drop ->\n    System.out.println "User ID: ${drop.userId} - Timestamp: ${drop.updatedAt}"\n}\n')))))}c.isMDXComponent=!0}}]);